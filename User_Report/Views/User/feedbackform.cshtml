
@{
    ViewBag.Title = "feedbackform";
    Layout = "~/Views/Shared/User_Layout.cshtml";
}

@model List<User_Report.Models.Feedbacksave>

<!DOCTYPE html>
<html lang="en">
<link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/sweetalert2@10">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <script src="https://code.jquery.com/jquery-3.6.4.min.js"></script>

    <script>
        $(document).ready(function () {
            $(".rating-button").click(function () {
                var ratingValue = $(this).data("value");

                // Remove 'selected' class from all buttons
                $(".rating-button").removeClass("selected");

                // Add 'selected' class to clicked button and all buttons before it
                $(this).addClass("selected");
                $(this).prevAll().addClass("selected");

                // Update the hidden input field with the selected rating
                $("#rating").val(ratingValue);
            });
        });
    </script>
    <script>
        function confirmSubmission() {
            return confirm("Do you want to save?");
        }
    </script>
    <style>
        .rating-buttons {
            display: flex;
            justify-content: space-around;
        }

        .rating-button {
            background-color: transparent;
            border: none;
            font-size: 24px;
            cursor: pointer;
        }

            .rating-button.selected {
                color: gold;
            }

        .submit-button {
            background-color: #4CAF50;
            color: white;
            padding: 12px 20px;
            border: none;
            border-radius: 4px;
            cursor: pointer;
        }

            .submit-button:hover {
                background-color: #45a049;
            }

        a {
            text-decoration: none;
        }

        td {
            font-weight: bolder;
        }

        th {
            text-decoration: none;
            text-transform: uppercase;
            color: firebrick;
            font-weight: bold;
        }

        th, td {
            border: 1px solid black;
            padding: 10px;
            text-align: center;
            /*font-size: .8vw;*/
            font-size: 12px;
            text-decoration: none;
        }

        /* Space after form and table */
        .container-fluid.card {
            margin-bottom: 20px;
            margin-top: 40px;
        }

        .webgrid-table {
            margin-top: 40px;
            margin-bottom: 20px;
        }




        #pagination-container {
            margin-top: 10px;
        }

        #first-page-btn, #prev-btn, #next-btn, #last-page-btn {
            background-color: #4CAF50; /* Green */
            border: none;
            color: white;
            padding: 8px 10px;
            text-align: center;
            text-decoration: none;
            display: inline-block;
            font-size: 10px;
            margin: 2px 0px;
            cursor: pointer;
            border-radius: 5px;
        }

            #first-page-btn:hover {
                background-color: #45a049;
            }
    </style>
</head>
<body>

    <div class="container-fluid mt-5 card p-5">
        <h5 style="text-align:left;" class="pb-4">Feedback</h5>



        <form class="row g-3" action="" method="post" onsubmit="return confirmSubmission()">
            <div class="container-fluid">
                <div class="row">


                    <div class="col-md-4">
                        <label for="validationDefault01" class="form-label">Module name</label>
                        <select class="form-control" id="" onchange="SelectedIndexChanged()" name="module_name" required @Html.DropDownList("modulenames", "---*Select Module Name*---")
                    </div>

                    <div class="col-md-4 ">
                        <label for="validationDefault01" class="form-label">feedback title</label>
                        <input type="text" class="form-control text-capitalize" id="validationDefault01" name="feedbackname" required>

                    </div>

                    <div class="col-md-4">
                        <label for="validationDefault02" class="form-label">feedback Description</label>
                        <textarea class="form-control" id="validationDefault03" name="descriptions" required></textarea>
                    </div>




                    <div class="col-md-5">
                        <label for="validationDefault03" class="form-label">Enhancement</label>
                        <textarea class="form-control" id="validationDefault03" name="enhancement" required></textarea>
                    </div>


                    <div class="col-md-3">
                        <label for="rating">Rating:</label>
                        <div class="rating-buttons">
                            @for (int i = 1; i <= 5; i++)
                            {
                                <button type="button" class="rating-button" data-value="@i">&#9733;</button>
                            }

                            <input type="hidden" id="rating" name="rating" value="1" required>
                        </div>
                    </div>

                    <div class="col-md-2 d-flex align-items-end">
                        <button class="btn btn-primary w-100" formaction="feedbacksave" type="submit">Submit</button>
                    </div>
                    <div class="col-md-2 d-flex align-items-end">
                        <button class="btn btn-primary w-100" formaction="clear" type="reset">clear</button>
                    </div>




                </div>
            </div>
        </form>
    </div>

    @if (Model != null && Model.Any())
    {
        <table id="bootstrap-data-table" border="1" class="webgrid-table overflow-x-scroll mb-auto p-5">

            <thead>
                <tr>

                    <th>Serial No</th>
                    <th>Module Name</th>
                    <th>feedbackname</th>
                    <th>Description</th>
                    <th>Enhancement</th>
                    <th>Rating</th>
                    @*<th>Created by</th>*@
                    <th>Created by</th>
                    <th>created date</th>


                </tr>
            </thead>
            <tbody>
                @{
                    int serialNumber = 1;
                }




                @foreach (var item in Model)
                {
                    <tr>

                        <td>@serialNumber</td>


                        <td>@item.module_name</td>
                        <td>@item.feedbackname</td>
                        <td>@item.descriptions</td>
                        <td>@item.enhancement</td>
                        <td>@item.rating</td>
                        <td>@item.emp_name</td>
                        <td>@item.created_date</td>





                    </tr>
                    serialNumber++;
                }


            </tbody>
        </table>

        <!-- Pagination buttons -->
        <div id="pagination-container">
            <button id="first-page-btn">First Page</button>
            <button id="prev-btn">Previous</button>
            <span id="page-num" class="text-primary fw-bold text-capitalize" style="font-family:Dubai;"></span>
            <button id="next-btn">Next</button>
            <button id="last-page-btn">Last Page</button>
        </div>


        <script type="text/javascript">
function editTicket(TicketNo) {
    window.location.href = '@Url.Action("EditTicket", "User")' + '?compliant_id=' + TicketNo;
}
        </script>


        <script>
            document.addEventListener("DOMContentLoaded", function () {
                var table = document.querySelector('.webgrid-table');
                var rows = table.tBodies[0].rows;
                var rowsPerPage = 10; // Set the number of rows per page
                var currentPage = 1;

                function showPage(page) {
                    var start = (page - 1) * rowsPerPage;
                    var end = start + rowsPerPage;

                    for (var i = 0; i < rows.length; i++) {
                        rows[i].style.display = (i >= start && i < end) ? '' : 'none';
                    }

                    document.getElementById('page-num').textContent = 'Page ' + page;
                }

                function firstPage() {
                    currentPage = 1;
                    showPage(currentPage);
                }

                function prevPage() {
                    if (currentPage > 1) {
                        currentPage--;
                        showPage(currentPage);
                    }
                }

                function nextPage() {
                    if (currentPage < Math.ceil(rows.length / rowsPerPage)) {
                        currentPage++;
                        showPage(currentPage);
                    }
                }

                function lastPage() {
                    currentPage = Math.ceil(rows.length / rowsPerPage);
                    showPage(currentPage);
                }

                document.getElementById('first-page-btn').addEventListener('click', firstPage);
                document.getElementById('prev-btn').addEventListener('click', prevPage);
                document.getElementById('next-btn').addEventListener('click', nextPage);
                document.getElementById('last-page-btn').addEventListener('click', lastPage);

                // Initial display
                showPage(currentPage);
            });
        </script>






    }
    else
    {
        <div style="text-align: center;">

            <p>No data available.</p>

        </div>


    }






















    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@10"></script>

    @if (@TempData["Success"] == "Success")
    {
        if (ViewBag.Message != null)
        {
            <script type="text/javascript">
            document.addEventListener('DOMContentLoaded', function () {

                Swal.fire({
                    /*title: 'File Upload',*/
                    text: "@ViewBag.Message",
                    icon: 'success',
                    // You can change the icon (success, error, warning, info)
                    confirmButtonColor: '#3085d6',
                    confirmButtonText: 'OK'
                });
            });
            </script>
        }
    }

    @*@if (@TempData["Success"] == "Warning")
        {
            if (ViewBag.Message != null)
            {
                <script type="text/javascript">
                document.addEventListener('DOMContentLoaded', function () {

                    Swal.fire({
                        /*title: 'File Upload',*/
                        text: "@ViewBag.Message",
                        icon: 'warning',
                        // You can change the icon (success, error, warning, info)
                        confirmButtonColor: '#3085d6',
                        confirmButtonText: 'OK'
                    });
                });*@
    @*</script>*@
















</body>
</html>
